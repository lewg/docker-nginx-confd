user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    server_names_hash_bucket_size 128;
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    #
    # Registrator Endpoints
    #
    {{if lsdir "/services/" }}
    {{range $service := lsdir "/services/"}}
    upstream {{base $service}} { {{ $endpoint := printf "/services/%s/*" $service}}
        {{range gets $endpoint}}server {{.Value}};
        {{end}}
    }
    {{end}}
    {{end}}

    #
    # Hosts
    #

    {{if lsdir "/nginx/hosts/"}}
    {{range $host := lsdir "/nginx/hosts/"}}
      server {
        listen 80;
        {{ $server := base $host }}
        server_name {{$server}};

        {{ $proxy_path := printf "/nginx/hosts/%s/upstream" $server }}# $proxy_path: {{ $proxy_path }}
        {{ $ssl_path := printf "/nginx/hosts/%s/ssl_only" $server }}# $ssl_path: {{ $ssl_path }}
        {{ $secured_path := printf "/nginx/hosts/%s/secured" $server }}# $secured_path: {{ $secured_path }}

        {{ if ls $ssl_path }}
          {{ $ssl_only := getv $ssl_path }}
          {{ if eq $ssl_only "on" }}
            if ($http_x_forwarded_proto != "https") {
              rewrite ^ https://$server_name$request_uri? permanent;
            }
          {{ end }}
        {{ end }}


        {{ $service_name := getv $proxy_path }}# $service name: {{ $service_name }}
        {{ $service_path := printf "/services/%s/" $service_name }}# $service_path: {{ $service_path }}
        {{ if ls $service_path }}
        location / {
          proxy_pass http://{{$service_name}};
          proxy_redirect off;
          proxy_set_header Host $host;
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;

          {{ if ls $secured_path }}
            {{ $secured := getv $secured_path }}
            # $secured: {{ $secured }}
            {{ if eq $secured "on" }}
              auth_basic            "Secured";
              auth_basic_user_file  /etc/nginx/secure.htpasswd;
            {{ end }}
          {{ end }}

        }
        {{ end }}
    }
    {{end}}
    {{end}}


    include /etc/nginx/conf.d/*.conf;
}
