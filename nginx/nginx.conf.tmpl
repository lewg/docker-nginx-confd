user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    server_names_hash_bucket_size 128;
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Fix the IP for some common scenarios:
    real_ip_header proxy_protocol;
    real_ip_recursive on;

    # Behind internal LB or ELB
    set_real_ip_from 10.0.0.0/8;
    set_real_ip_from 172.16.0.0/12;
    set_real_ip_from 192.168.0.0/16;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    log_format elb_log '$proxy_protocol_addr - $remote_user [$time_local] '
                       '"$request" $status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent"';


    access_log  /var/log/nginx/access.log  elb_log;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    map $http_x_forwarded_proto $proxy_https {
        default off;
        https on;
    }

    #
    # Registrator Endpoints
    #
    {{if lsdir "/services/" }}
    {{range $service := lsdir "/services/"}}
    upstream {{base $service}} { {{ $endpoint := printf "/services/%s/*" $service}}
        {{range gets $endpoint}}server {{.Value}};
        {{end}}
    }
    {{end}}
    {{end}}

    #
    # Hosts
    #

    {{if lsdir "/nginx/hosts/"}}
    {{range $host := lsdir "/nginx/hosts/"}}
    server {
        listen 80;
        {{ $server := base $host }}
        server_name {{$server}};

        {{ $proxy_path := printf "/nginx/hosts/%s/upstream" $server }}# {{ $proxy_path }}
        {{ $ssl_path := printf "/nginx/hosts/%s/ssl_only" $server }}# {{ $ssl_path }}
        {{ if ls $ssl_path }}
            {{ $ssl_only := getv $ssl_path }}
            {{ if eq $ssl_only "on" }}
                if ($https != "on") {
                    rewrite ^   https://$server_name$request_uri? permanent;
                }
            {{ end }}
        {{ end }}
        {{ $service_name := getv $proxy_path }}# {{ $service_name }}
        {{ $service_path := printf "/services/%s/" $service_name }}# {{ $service_path }}
        {{ if ls $service_path }}
        location / {
            proxy_pass http://{{$service_name}};
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        {{ end }}
    }
    {{end}}
    {{end}}


    include /etc/nginx/conf.d/*.conf;
}
